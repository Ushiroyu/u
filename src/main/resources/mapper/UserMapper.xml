<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.community.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="com.example.community.entity.User">
        <id column="user_id" property="userId" jdbcType="VARCHAR"/>
        <result column="username" property="username" jdbcType="VARCHAR"/>
        <result column="password" property="password" jdbcType="VARCHAR"/>
        <result column="sex" property="sex" jdbcType="VARCHAR"/>
        <result column="phone" property="phone" jdbcType="VARCHAR"/>
        <result column="address" property="address" jdbcType="VARCHAR"/>
        <result column="name" property="name" jdbcType="VARCHAR"/>
        <result column="enabled" property="enabled" jdbcType="BIT"/>
    </resultMap>
    <resultMap id="UserWithRoles" type="com.example.community.entity.User" extends="BaseResultMap">
        <collection property="roles" ofType="com.example.community.entity.Role">
            <id column="rid" property="roleId"/>
            <result column="rname" property="name"/>
            <result column="rnameZh" property="nameZh"/>
        </collection>
    </resultMap>
    
    <resultMap id="UserWithSelectRoles" type="com.example.community.entity.User" extends="BaseResultMap">
        <collection property="roles" column="user_id" ofType="com.example.community.entity.Role" select="selectUserRoles">
            <id column="rid" property="roleId"/>
            <result column="rname" property="name"/>
            <result column="rnameZh" property="nameZh"/>
        </collection>
    </resultMap>
    <resultMap id="RoleMap" type="com.example.community.entity.Role">
        <id column="rid" property="roleId"/>
        <result column="rname" property="name"/>
        <result column="rnameZh" property="nameZh"/>
    </resultMap>
    
    <select id="getAllUser" resultMap="UserWithRoles">
        select
        u.user_id,
        u.username,
        u.password,
        u.sex,
        u.phone,
        u.detail_address,
        u.name,
        u.enabled,
        r.`role_id` as rid,
        r.`name` as rname,
        r.`nameZh` as rnameZh
        from `user` u
        left join `user_role` ur on u.`user_id`=ur.`user_id`
        left join `role` r on ur.`role_id`=r.`role_id`
        where u.`user_id`!=#{userId}
        <if test="keywords!=null">
            and u.name like concat('%',#{keywords},'%')
        </if>
        order by u.user_id
    </select>

    <select id="selectUserRoles" resultMap="RoleMap">
        select
        r.`role_id` as rid,
        r.`name` as rname,
        r.`nameZh` as rnameZh
        from `user_role` ur
        left join `role` r on ur.`role_id`=r.`role_id`
        where ur.`user_id`=#{user_id}
    </select>
    
    <select id="getAllUserSimple" resultMap="UserWithSelectRoles">
        select
            u.user_id,
            u.username,
            u.name,
            u.enabled
        from `user` u
        where 1 = 1
        <if test="name!=null">
            and u.name like concat('%',#{name},'%')
        </if>
        <if test="userId!=null">
            and u.`user_id`=#{userId}
        </if>
        order by u.user_id
    </select>

    <select id="getUserRolesById" resultType="com.example.community.entity.Role">
        select r.*
        from `role` r,
             `user_role` ur
        where ur.`role_id` = r.`role_id`
          and ur.`user_id` = #{id}
    </select>

    <select id="getUsersByRole" resultMap="BaseResultMap">
        select
        u.user_id,
        u.username,
        u.password,
        u.sex,
        u.phone,
        u.detail_address,
        u.name,
        u.enabled 
        from `user` u
        left join `user_role` ur on u.`user_id`=ur.`user_id`
        left join `role` r on ur.`role_id`=r.`role_id`
        where 1 = 1
        <if test="userRole!=null">
            and r.name = #{userRole}
        </if>
        order by u.user_id
    </select>
</mapper>
